package com.example.broadcasttest;

import java.util.Set;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.graphics.Color;
import android.media.Ringtone;
import android.media.RingtoneManager;
import android.net.Uri;
import android.os.Bundle;
import android.os.PowerManager;
import android.os.PowerManager.WakeLock;
import android.util.Log;
import android.view.Gravity;
import android.view.WindowManager;
import android.widget.EditText;

public class MyReceiver extends BroadcastReceiver {

	final String SYSTEM_DIALOG_REASON_KEY = "reason";
	final String SYSTEM_DIALOG_REASON_HOME_KEY = "homekey";

	private String hh;

	public MyReceiver() {
		Log.d("MyReceiver", "constructor");
	}

	public MyReceiver(String hh) {
		super();
		this.hh = hh;
		Log.d("MyReceiver", "constructor hh");
	}

	@Override
	public void onReceive(final Context context, Intent intent) {

		Log.d("MyReceiver" + hh, intent.getAction());

		Bundle bundle = intent.getExtras();

		if (null != bundle) {

			Set<String> keys = bundle.keySet();

			for (String key : keys) {
				Log.d("MyReceiver" + hh,
						"key:" + key + ",value:" + bundle.getString(key));
				
				
				
				
			}

		}

		if (intent.getAction().equals(Intent.ACTION_SHUTDOWN)) {
			getDefaultRingtone(context).play();
		}
		if (intent.getAction().equals(Intent.ACTION_CLOSE_SYSTEM_DIALOGS)) {

			// globalactions
			String reason = intent.getStringExtra(SYSTEM_DIALOG_REASON_KEY);
			if (reason != null && reason.equals("globalactions")) {
				getDefaultRingtone(context).play();
				// WindowManager manager = (WindowManager) context
				// .getSystemService(Context.WINDOW_SERVICE);

				// dfgd

				// final EditText text = new EditText(context);
				// text.setText("ddddddddddddddddddddddd");
				// text.setBackgroundColor(Color.RED);
				// text.requestFocus();
				// WindowManager.LayoutParams pa = new
				// WindowManager.LayoutParams();
				// pa.width = WindowManager.LayoutParams.MATCH_PARENT;
				// pa.height = WindowManager.LayoutParams.MATCH_PARENT;
				// // pa.type = WindowManager.LayoutParams.TYPE_WALLPAPER;
				// pa.type = WindowManager.LayoutParams.TYPE_SYSTEM_ERROR;
				// pa.flags = WindowManager.LayoutParams.FLAG_TURN_SCREEN_ON;
				// pa.gravity = Gravity.CENTER;
				//
				// manager.addView(text, pa);
				//
				// PowerManager pm = (PowerManager) context
				// .getSystemService(Context.POWER_SERVICE);
				//
				// WakeLock mWakelock = pm.newWakeLock(
				// PowerManager.ACQUIRE_CAUSES_WAKEUP
				// | PowerManager.SCREEN_DIM_WAKE_LOCK,
				// "SimpleTimer");
				//
				// mWakelock.acquire();
			}

		}
	}

	private Ringtone getDefaultRingtone(Context context) {

		Uri ringtoneUri = RingtoneManager.getActualDefaultRingtoneUri(context,
				RingtoneManager.TYPE_RINGTONE);

		return RingtoneManager.getRingtone(context, ringtoneUri);
	}

}
